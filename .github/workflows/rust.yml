name: Rust bindings

on:
  push:
    branches:
      - main
  release:
    types: [published]
  pull_request:
    branches:
      - "**"

jobs:
  fuzz_targets:
    name: Run fuzzers
    runs-on: ubuntu-latest
    env:
      CARGO_PROFILE_RELEASE_LTO: false
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly

      - name: Install dependencies
        run: sudo apt-get install libgmp-dev

      - name: Install cargo-fuzz
        run: cargo +nightly install cargo-fuzz

      - name: Cargo fuzz
        run: |
          cd rust_bindings
          cargo fuzz list | xargs -I "%" sh -c "cargo +nightly fuzz run % -- -max_total_time=20 || exit 255"

  build_crate:
    name: Build crate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install dependencies
        run: sudo apt-get install libgmp-dev

      - name: Rustfmt
        run: cargo fmt -- --files-with-diff --check

      - name: Clippy
        run: cargo clippy

      - name: Tests
        run: cargo test && cargo test --release

      - name: Build
        run: cargo build --release

      - name: Publish to crates.io (dry run)
        run: cargo publish --dry-run -p chiavdf

      - name: Upload crate artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crate
          path: ./target/package/*-*.crate

      - name: Publish to crates.io
        if: env.RELEASE == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.cargo_registry_token }}
        run: |
          cargo publish -p chiavdf
